name: Build CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [ 18.x ]
        os: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Print Node.js Version
        run: node --version

      - name: Install Dependencies
        run: |
          npm install
          npm install aws-cdk -g

      - name: Run build
        run: npm run build --if-present

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: Test Results
          path: coverage

      - name: Generate Cloudformation template
        run: cdk synth > template.yaml

      - name: Upload Cloudformation template
        uses: actions/upload-artifact@v4
        with:
          name: Cloudformation Template
          path: template.yaml

  deploy:
    name: Deploy on node ${{ matrix.node_version }} and ${{ matrix.os }}
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [ 18.x ]
        os: [ ubuntu-latest ]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Print Node.js Version
        run: node --version

      - name: Install Dependencies
        run: |
          npm install
          npm install aws-cdk -g

      - name: Run build
        run: npm run build --if-present

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: myGitHubActions

      - name: Deploy with AWS CDK
        run: cdk deploy --require-approval never --stack-name TestStack
